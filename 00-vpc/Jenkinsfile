pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    // environment{
    //     DEBUG = 'true'
    // }
    parameters {
        choice(name: 'ACTION', choice: ['apply','destroy'], description: 'select Action')
    }
    stages {
        stage(''Init) {
            steps {
                 sh """
                    cd 00-vpc
                    terraform init -reconfigure
                 """
            }
        }
        stage('Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds')
                sh 'cd 00-vpc'
                sh 'terraform paln -out=tfplan'
            }
                
            }
        
        // stage('Docker build') {
        //     steps {
        //         sh """
        //         docker build -t riyacham/backend:${appVersion} .
        //         docker images
        //         """
        //     }
        // }
    
       
        
    }
    post {
        always{
            echo "this section run always"
            deleteDir()
        }
        success{
            echo "this section run when pipeline success"
        }
        failure{
            echo "this section run when pipeline fails"
        }
    }

}